(()=>{var n={208:(n,e,t)=>{"use strict";t.d(e,{A:()=>s});var r=t(354),a=t.n(r),i=t(314),o=t.n(i)()(a());o.push([n.id,':root {\n  /* Color theme */\n  --ct-darker: #2d2d2d;\n  --ct-dark: #3d3d3d;\n  --ct-grey: #535353;\n  --ct-numix: #d64937;\n  --ct-blue: #379cd6;\n  --ct-green: #5cd637;\n  --ct-light: #dcdcdc;\n  --ct-white: #ffffff;\n  /* Color theme (filter) for SVG images */\n  --filter-darker: invert(11%) sepia(0%) saturate(0%) hue-rotate(217deg)\n    brightness(102%) contrast(84%);\n  --filter-dark: invert(15%) sepia(0%) saturate(1327%) hue-rotate(271deg)\n    brightness(101%) contrast(74%);\n  --filter-grey: invert(32%) sepia(0%) saturate(0%) hue-rotate(320deg)\n    brightness(95%) contrast(89%);\n  --filter-numix: invert(34%) sepia(22%) saturate(6773%) hue-rotate(345deg)\n    brightness(92%) contrast(80%);\n  --filter-light: invert(99%) sepia(0%) saturate(4028%) hue-rotate(193deg)\n    brightness(123%) contrast(73%);\n  --filter-white: invert(93%) sepia(100%) saturate(0%) hue-rotate(37deg)\n    brightness(105%) contrast(102%);\n\n  /* Elements height */\n  --navbar-h: 3.8rem;\n  --side-panel-length: 15rem;\n  --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n  --footer-h: 3rem;\n\n  /* Font size */\n  --logo-fs: 1.3rem;\n  --navbar-fs: 1rem;\n  --header-fs: 1.8rem;\n  --subheader-fs: 1.4rem;\n  --subheader-sm-fs: 1.3rem;\n  --content-fs: 0.9rem;\n\n  --taskRow-h: 4rem;\n\n  /* Tiles dimmension */\n  --board-dimmension: min(90vw, 40rem);\n  --tile-size: 10%;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: "Courier New", Courier, monospace;\n  color: var(--ct-darker);\n}\n\nbody {\n  background-color: var(--ct-grey);\n  display: grid;\n  grid-template: var(--navbar-h) var(--content-h) var(--footer-h) / 1fr;\n  grid-template-areas:\n    "navbar"\n    "main-content"\n    "footer";\n}\n\n.popup-unhidden {\n  display: block !important;\n}\n\n/* --------------------- Nav bar -------------------- */\nnav {\n  grid-area: navbar;\n  background-color: var(--ct-darker);\n  font-size: var(--navbar-fs);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1rem;\n}\n\n.title-container {\n  width: fit-content;\n  height: 90%;\n  display: flex;\n  align-items: center;\n}\n\n.logo {\n  width: var(--logo-fs);\n  margin-right: 1rem;\n  filter: var(--filter-light);\n}\n\n/*.logo:hover {*/\n/*  cursor: pointer;*/\n/*  filter: var(--filter-numix);*/\n/*}*/\n\n.app-name {\n  display: block;\n  color: var(--ct-light);\n  font-size: var(--logo-fs);\n}\n\n.btn-icon-label,\n.btn-form {\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  gap: 0rem;\n  padding: 0.5rem;\n  font-size: var(--navbar-fs);\n  /*0px to hide the label*/\n  /*border-radius: 30px;*/\n  border: 0 none;\n  background-color: var(--ct-light);\n  text-transform: capitalize;\n}\n\n.btn-icon-label > img {\n  width: var(--header-fs);\n  filter: var(--filter-darker);\n}\n\n.btn-icon-label:hover,\n.btn-form:hover {\n  cursor: pointer;\n  background-color: var(--ct-numix);\n}\n\n/* --------------------- Main container -------------------- */\n.mainContainer {\n  height: 100%;\n  width: 100%;\n  /*height: 90%;*/\n  /*width: max(90%, 50rem);*/\n  grid-area: main-content;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  gap: 1rem;\n  overflow: auto;\n  padding: 1rem 0;\n}\n\n.mainContainer > img {\n  width: clamp(20rem, 90%, 50rem);\n  position: relative;\n  bottom: -20%;\n}\n\n/* --------------- */\n.boardContainer,\n.attacksBoardContainer {\n  /*height: max(60vh, 5rem);*/\n  /*width: max(60vh, 5rem);*/\n  height: var(--board-dimmension);\n  width: var(--board-dimmension);\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.tile {\n  height: var(--tile-size);\n  width: var(--tile-size);\n  border: 1px solid black;\n}\n\n.gameplay-human-view {\n  /*height: 90vh;*/\n  /*width: 90vw;*/\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  gap: 1rem;\n  flex-wrap: wrap;\n  /*overflow: auto;*/\n}\n\n.ship {\n  background: blue;\n}\n\n.tile-hit {\n  background: white;\n}\n\n/*ship-hit is used to display player\'s attacks*/\n/*.destroyed-ship is used to display opponent\'s attacks*/\n.ship-hit,\n.destroyed-ship {\n  background: red !important;\n}\n\n.current-player {\n  font-size: var(--logo-fs);\n  color: var(--ct-light);\n  font-weight: 700;\n}\n\n.slider-box {\n  display: flex;\n  gap: 1rem;\n  justify-items: center;\n  align-items: center;\n  font-size: var(--content-fs);\n}\n\n.slider-box h4 {\n  color: var(--ct-light);\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--ct-blue);\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: "";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\ninput:checked + .slider {\n  background-color: var(--ct-blue);\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px var(--ct-blue);\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* --------------------- .popup-player -------------------- */\n.popup-new-game {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  height: fit-content;\n  padding: 0.5rem;\n  background-color: var(--ct-darker);\n  /*border-radius: 10px;*/\n  width: min(100%, 24rem);\n  display: none;\n}\n\n.popup-title {\n  color: var(--ct-light);\n  text-align: center;\n  width: 100%;\n}\n\n.popup-new-game > .form-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.popup-new-game > .form-container > .player-fields {\n  width: 50%;\n  height: 100%;\n  padding: 1rem 0;\n}\n\n.popup-new-game > .form-container > .player-fields > label {\n  color: var(--ct-light);\n  width: 100%;\n  text-align: left;\n}\n\n.popup-new-game > .form-container > .player-fields > input[type="text"] {\n  margin-bottom: 0.5rem;\n}\n\n.popup-new-game > .form-container > .player-fields > input[type="checkbox"] {\n  margin-right: 0.5rem;\n}\n\n.popup-new-game > .form-container > button {\n  margin: 0 auto;\n  font-size: 1rem;\n}\n\n.winner-banner {\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: yellow;\n  top: 35%;\n  left: 50%;\n  padding: 2rem;\n}\n\n/* --------------------- Footer -------------------- */\nfooter {\n  grid-area: footer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--ct-darker);\n}\n\nfooter > .github-contact-info {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: nowrap;\n  gap: 0.5rem;\n  text-decoration: none;\n}\n\nfooter > .github-contact-info > .footer-logo {\n  width: var(--logo-fs);\n  filter: var(--filter-numix);\n}\n\nfooter > .github-contact-info > .github-user {\n  font-size: var(--logo-fs);\n  color: var(--ct-light);\n}\n\nfooter > .github-contact-info > .github-user:hover {\n  color: var(--ct-numix);\n}\n\n/* --------------------- Section -------------------- */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n  :root {\n    --logo-fs: 1.4rem;\n    --navbar-fs: 1rem;\n    --header-fs: 1.9rem;\n    --subheader-fs: 1.5rem;\n    --subheader-sm-fs: 1.4rem;\n    --content-fs: 1rem;\n  }\n}\n\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n  :root {\n    --logo-fs: 1.5rem;\n    --navbar-fs: 1.1rem;\n    --header-fs: 2rem;\n    --subheader-fs: 1.6rem;\n    --subheader-sm-fs: 1.5rem;\n    --content-fs: 1rem;\n\n    /* Elements height */\n    --side-panel-length: min(14rem, 40%);\n    --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n  }\n}\n\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n\n/* ------------------------ Animations --------------------*/\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes slideDown {\n  0% {\n    transform: translate(0, -100%);\n  }\n\n  100% {\n    transform: translate(0, 0);\n  }\n}\n\n@keyframes slideRight {\n  0% {\n    transform: translate(-100%);\n  }\n\n  100% {\n    transform: translate(0);\n  }\n}\n\n@keyframes scaleX {\n  0% {\n    transform: scaleX(0);\n  }\n\n  100% {\n    transform: scaleX(100%);\n  }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n  /* Color theme */\n  --ct-darker: #2d2d2d;\n  --ct-dark: #3d3d3d;\n  --ct-grey: #535353;\n  --ct-numix: #d64937;\n  --ct-blue: #379cd6;\n  --ct-green: #5cd637;\n  --ct-light: #dcdcdc;\n  --ct-white: #ffffff;\n  /* Color theme (filter) for SVG images */\n  --filter-darker: invert(11%) sepia(0%) saturate(0%) hue-rotate(217deg)\n    brightness(102%) contrast(84%);\n  --filter-dark: invert(15%) sepia(0%) saturate(1327%) hue-rotate(271deg)\n    brightness(101%) contrast(74%);\n  --filter-grey: invert(32%) sepia(0%) saturate(0%) hue-rotate(320deg)\n    brightness(95%) contrast(89%);\n  --filter-numix: invert(34%) sepia(22%) saturate(6773%) hue-rotate(345deg)\n    brightness(92%) contrast(80%);\n  --filter-light: invert(99%) sepia(0%) saturate(4028%) hue-rotate(193deg)\n    brightness(123%) contrast(73%);\n  --filter-white: invert(93%) sepia(100%) saturate(0%) hue-rotate(37deg)\n    brightness(105%) contrast(102%);\n\n  /* Elements height */\n  --navbar-h: 3.8rem;\n  --side-panel-length: 15rem;\n  --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n  --footer-h: 3rem;\n\n  /* Font size */\n  --logo-fs: 1.3rem;\n  --navbar-fs: 1rem;\n  --header-fs: 1.8rem;\n  --subheader-fs: 1.4rem;\n  --subheader-sm-fs: 1.3rem;\n  --content-fs: 0.9rem;\n\n  --taskRow-h: 4rem;\n\n  /* Tiles dimmension */\n  --board-dimmension: min(90vw, 40rem);\n  --tile-size: 10%;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: "Courier New", Courier, monospace;\n  color: var(--ct-darker);\n}\n\nbody {\n  background-color: var(--ct-grey);\n  display: grid;\n  grid-template: var(--navbar-h) var(--content-h) var(--footer-h) / 1fr;\n  grid-template-areas:\n    "navbar"\n    "main-content"\n    "footer";\n}\n\n.popup-unhidden {\n  display: block !important;\n}\n\n/* --------------------- Nav bar -------------------- */\nnav {\n  grid-area: navbar;\n  background-color: var(--ct-darker);\n  font-size: var(--navbar-fs);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1rem;\n}\n\n.title-container {\n  width: fit-content;\n  height: 90%;\n  display: flex;\n  align-items: center;\n}\n\n.logo {\n  width: var(--logo-fs);\n  margin-right: 1rem;\n  filter: var(--filter-light);\n}\n\n/*.logo:hover {*/\n/*  cursor: pointer;*/\n/*  filter: var(--filter-numix);*/\n/*}*/\n\n.app-name {\n  display: block;\n  color: var(--ct-light);\n  font-size: var(--logo-fs);\n}\n\n.btn-icon-label,\n.btn-form {\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  gap: 0rem;\n  padding: 0.5rem;\n  font-size: var(--navbar-fs);\n  /*0px to hide the label*/\n  /*border-radius: 30px;*/\n  border: 0 none;\n  background-color: var(--ct-light);\n  text-transform: capitalize;\n}\n\n.btn-icon-label > img {\n  width: var(--header-fs);\n  filter: var(--filter-darker);\n}\n\n.btn-icon-label:hover,\n.btn-form:hover {\n  cursor: pointer;\n  background-color: var(--ct-numix);\n}\n\n/* --------------------- Main container -------------------- */\n.mainContainer {\n  height: 100%;\n  width: 100%;\n  /*height: 90%;*/\n  /*width: max(90%, 50rem);*/\n  grid-area: main-content;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  gap: 1rem;\n  overflow: auto;\n  padding: 1rem 0;\n}\n\n.mainContainer > img {\n  width: clamp(20rem, 90%, 50rem);\n  position: relative;\n  bottom: -20%;\n}\n\n/* --------------- */\n.boardContainer,\n.attacksBoardContainer {\n  /*height: max(60vh, 5rem);*/\n  /*width: max(60vh, 5rem);*/\n  height: var(--board-dimmension);\n  width: var(--board-dimmension);\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.tile {\n  height: var(--tile-size);\n  width: var(--tile-size);\n  border: 1px solid black;\n}\n\n.gameplay-human-view {\n  /*height: 90vh;*/\n  /*width: 90vw;*/\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  gap: 1rem;\n  flex-wrap: wrap;\n  /*overflow: auto;*/\n}\n\n.ship {\n  background: blue;\n}\n\n.tile-hit {\n  background: white;\n}\n\n/*ship-hit is used to display player\'s attacks*/\n/*.destroyed-ship is used to display opponent\'s attacks*/\n.ship-hit,\n.destroyed-ship {\n  background: red !important;\n}\n\n.current-player {\n  font-size: var(--logo-fs);\n  color: var(--ct-light);\n  font-weight: 700;\n}\n\n.slider-box {\n  display: flex;\n  gap: 1rem;\n  justify-items: center;\n  align-items: center;\n  font-size: var(--content-fs);\n}\n\n.slider-box h4 {\n  color: var(--ct-light);\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--ct-blue);\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: "";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\ninput:checked + .slider {\n  background-color: var(--ct-blue);\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px var(--ct-blue);\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* --------------------- .popup-player -------------------- */\n.popup-new-game {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  height: fit-content;\n  padding: 0.5rem;\n  background-color: var(--ct-darker);\n  /*border-radius: 10px;*/\n  width: min(100%, 24rem);\n  display: none;\n}\n\n.popup-title {\n  color: var(--ct-light);\n  text-align: center;\n  width: 100%;\n}\n\n.popup-new-game > .form-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.popup-new-game > .form-container > .player-fields {\n  width: 50%;\n  height: 100%;\n  padding: 1rem 0;\n}\n\n.popup-new-game > .form-container > .player-fields > label {\n  color: var(--ct-light);\n  width: 100%;\n  text-align: left;\n}\n\n.popup-new-game > .form-container > .player-fields > input[type="text"] {\n  margin-bottom: 0.5rem;\n}\n\n.popup-new-game > .form-container > .player-fields > input[type="checkbox"] {\n  margin-right: 0.5rem;\n}\n\n.popup-new-game > .form-container > button {\n  margin: 0 auto;\n  font-size: 1rem;\n}\n\n.winner-banner {\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: yellow;\n  top: 35%;\n  left: 50%;\n  padding: 2rem;\n}\n\n/* --------------------- Footer -------------------- */\nfooter {\n  grid-area: footer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--ct-darker);\n}\n\nfooter > .github-contact-info {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: nowrap;\n  gap: 0.5rem;\n  text-decoration: none;\n}\n\nfooter > .github-contact-info > .footer-logo {\n  width: var(--logo-fs);\n  filter: var(--filter-numix);\n}\n\nfooter > .github-contact-info > .github-user {\n  font-size: var(--logo-fs);\n  color: var(--ct-light);\n}\n\nfooter > .github-contact-info > .github-user:hover {\n  color: var(--ct-numix);\n}\n\n/* --------------------- Section -------------------- */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n  :root {\n    --logo-fs: 1.4rem;\n    --navbar-fs: 1rem;\n    --header-fs: 1.9rem;\n    --subheader-fs: 1.5rem;\n    --subheader-sm-fs: 1.4rem;\n    --content-fs: 1rem;\n  }\n}\n\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n  :root {\n    --logo-fs: 1.5rem;\n    --navbar-fs: 1.1rem;\n    --header-fs: 2rem;\n    --subheader-fs: 1.6rem;\n    --subheader-sm-fs: 1.5rem;\n    --content-fs: 1rem;\n\n    /* Elements height */\n    --side-panel-length: min(14rem, 40%);\n    --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n  }\n}\n\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n\n/* ------------------------ Animations --------------------*/\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes slideDown {\n  0% {\n    transform: translate(0, -100%);\n  }\n\n  100% {\n    transform: translate(0, 0);\n  }\n}\n\n@keyframes slideRight {\n  0% {\n    transform: translate(-100%);\n  }\n\n  100% {\n    transform: translate(0);\n  }\n}\n\n@keyframes scaleX {\n  0% {\n    transform: scaleX(0);\n  }\n\n  100% {\n    transform: scaleX(100%);\n  }\n}\n'],sourceRoot:""}]);const s=o},314:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(o[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&o[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},354:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},o=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var p=t(d),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=a(m,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:u,references:1})}o.push(d)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=r(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=t(i[o]);e[s].references--}for(var A=r(n,a),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},659:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},705:(n,e,t)=>{const r=t(341),a=class{#n=null;#e=null;#t=null;#r=null;constructor(){if(a._instance)throw new Error("Class Controller can not be instantiated more than once");a._instance=this}get player1(){return this.#n}get player2(){return this.#e}get currentPlayer(){return this.#t}set currentPlayer(n){this.#t=n}get currentOpponent(){return this.#r}set currentOpponent(n){this.#r=n}nextTurn(){this.#t===this.#n?(this.#t=this.#e,this.#r=this.#n):(this.#t=this.#n,this.#r=this.#e)}checkGameOver(){return this.#n.tilesWithShipsSunk>=44?(this.#n.setAsWinner(),!0):this.#e.tilesWithShipsSunk>=44&&(this.#e.setAsWinner(),!0)}restartInstance(n="Player 1",e=!0,t="Player 2",a=!1){this.#n=new r(n,e),this.#e=new r(t,a),this.#t=null,this.#r=null}setInitialTurn(){this.#n.isHumanPlayer?(this.#t=this.#n,this.#r=this.#e):this.#e.isHumanPlayer?(this.#t=this.#e,this.#r=this.#n):(this.#t=null,this.#r=null,console.error("No human players"))}},i=new a;e.gameInstance=i},120:(n,e,t)=>{const r=t(705),a=t(8),i=()=>{document.getElementById("new_game_popup").classList.toggle("popup-unhidden"),document.getElementById("player_1_name").value="",document.getElementById("player_1_type").checked=!0,document.getElementById("player_2_name").value="",document.getElementById("player_2_type").checked=!1},o=()=>{const n=document.getElementById("player_1_name").value,e=document.getElementById("player_1_type").checked,t=document.getElementById("player_2_name").value,a=document.getElementById("player_2_type").checked;r.gameInstance.restartInstance(""==n?"Player 1":n,e,""==t?"Player 2":t,a),e||r.gameInstance.player1.generateRandomBoard(),a||r.gameInstance.player2.generateRandomBoard(),e?(r.gameInstance.currentPlayer=r.gameInstance.player1,r.gameInstance.currentOpponent=r.gameInstance.player2):a?(r.gameInstance.currentPlayer=r.gameInstance.player2,r.gameInstance.currentOpponent=r.gameInstance.player1):r.gameInstance.nextTurn(),i(),s()},s=()=>{const n=document.getElementById("main_container");n.innerHTML="",r.gameInstance.currentPlayer.isHumanPlayer?n.appendChild(a.generateBoardToSetUpShips(r.gameInstance.currentPlayer)):(console.error(`Current player is not human - (isHuman: ${r.gameInstance.currentPlayer.isHumanPlayer})`),alert("At least one player must be Human. Click on 'New Game' button to set up a new game."))},A=()=>{const n=document.getElementById("main_container");if(r.gameInstance.checkGameOver()){console.log("PLAYER 1: "+(r.gameInstance.player1.isWinner?"WINNER":"LOSER")),console.log("PLAYER 2: "+(r.gameInstance.player2.isWinner?"WINNER":"LOSER"));const e=n.cloneNode(!0);n.parentNode.replaceChild(e,n);const t=r.gameInstance.player1.isWinner?r.gameInstance.player1.name:r.gameInstance.player2.name,a=document.createElement("h1");return a.innerText=`${t} wins!`,a.classList.add("winner-banner"),void e.appendChild(a)}n.innerHTML="",r.gameInstance.currentPlayer.isHumanPlayer?n.appendChild(a.generateHumanPlayerGameView(r.gameInstance.currentPlayer,r.gameInstance.currentOpponent)):console.error(`Current player is not human - (isHuman: ${r.gameInstance.currentPlayer.isHumanPlayer})`)};e.assignEventListeners=()=>{document.getElementById("btn_new_game").addEventListener("click",i),document.getElementById("accept_players").addEventListener("click",o)},e.evLActivateTileToPlaceShip=n=>{const e=n.target.getAttribute("index"),t=document.getElementsByClassName("boardContainer"),i=r.gameInstance.currentPlayer.shiftShipFromListToPlace();if(null===i&&(r.gameInstance.currentPlayer===r.gameInstance.player2||!r.gameInstance.currentOpponent.isHumanPlayer))return console.log("Boards configured."),console.log("Launch game flow"),r.gameInstance.setInitialTurn(),void document.getElementById("main_container").appendChild(a.generateHumanPlayerGameView(r.gameInstance.currentPlayer,r.gameInstance.currentOpponent));if(null===i)return console.log("No more ships to place"),r.gameInstance.nextTurn(),void s();if(!r.gameInstance.currentPlayer.gameboard.placeShipInGameboard(i,1,"a",e))return r.gameInstance.currentPlayer.shipsToPlace.unshift(i),void console.log(`Placement not allowed at index ${e} for ship size ${i.size}`);t.innerHTML="";const o=document.getElementById("main_container");o.innerHTML="",o.appendChild(a.generateBoardToSetUpShips(r.gameInstance.currentPlayer))},e.evLActivateTileToReceiveAttack=n=>{const e=n.target.getAttribute("index"),{tileHit:t,shipHit:a}=r.gameInstance.currentOpponent.gameboard.receiveAttackAtIndex(e);if(a)return r.gameInstance.currentPlayer.increaseCounterOfShipsSunk(),console.log(`Ship hit: counter increased to ${r.gameInstance.currentPlayer.tilesWithShipsSunk}`),void A();if(t){if(console.log("Tile hit"),!r.gameInstance.currentOpponent.isHumanPlayer){const n=r.gameInstance.currentOpponent.makeRandomMovement(r.gameInstance.currentPlayer.gameboard);console.log(`Opponent random attack: ${n}`),console.log(`Oppenent's sunk counter: ${r.gameInstance.currentOpponent.tilesWithShipsSunk}`)}A()}else console.log("No tile hit")}},852:(n,e,t)=>{const r=t(580),a=t(890);n.exports=class{#a=10;#i=Array(this.#a**2);#o=0;#s=["A","B","C","D","E","F","G","H","I","J"];constructor(){this.#i=this.#A(),this.#o=0}get arrayOfTiles(){return this.#i}#A(){const n=[];for(let e=0;e<this.#a**2;e++)n.push(new r);return n}#l(){return this.#o>=15}#c(n,e){return 1>n||10<n?-1:this.#s.includes(e.toUpperCase())?10*(n-1)+this.#s.indexOf(e.toUpperCase()):-1}#d(n,e,t=!0){if(0>n.size||5<n.size)throw new Error(`Length (${n.size}) not valid`);const r=[];let i=parseInt(e);for(let o=0;o<n.size;o++){if(99<i)return!1;if(this.#i[i].ship instanceof a)return!1;if(!t&&Math.floor(e/10)!==Math.floor(i/10))return!1;r.push(i),t?i+=10:i++}return r.forEach((e=>this.#i[e].ship=n)),this.#o++,!0}placeShipInGameboard(n,e,t,r=null,a=null){if(this.#l())return!1;const i=null===r?this.#c(e,t):r;if(i<0||99<i)return!1;let o=null;return o=null===a?document.getElementById("v_h_slider").checked:a,this.#d(n,i,o)}receiveAttack(n,e){const t=this.#c(n,e);return this.receiveAttackAtIndex(t)}receiveAttackAtIndex(n){if(0>n||99<n)return{tileHit:!1,shipHit:!1};const e=this.#i[n];return e.isHit?{tileHit:!1,shipHit:!1}:(e.markTileAsHit(),e.ship instanceof a?(e.ship.hit(),{tileHit:!0,shipHit:!0}):{tileHit:!0,shipHit:!1})}}},341:(n,e,t)=>{const r=t(852),a=t(890);n.exports=class{#p="";#m=!1;#u=null;#h=!1;#g=[];#C=[];#f=0;constructor(n,e){this.#p=n,this.#h=e,this.#u=new r,this.#g=this.#E(),this.#C=this.#B()}get name(){return this.#p}get isWinner(){return this.#m}get isHumanPlayer(){return this.#h}get gameboard(){return this.#u}get tilesAvailable(){return this.#g}get shipsToPlace(){return this.#C}get tilesWithShipsSunk(){return this.#f}increaseCounterOfShipsSunk(){this.#f++}shiftShipFromListToPlace(){return this.#C.length<1?null:this.#C.shift()}spliceTilesAvailable(n){this.#g.splice(n,1)}generateRandomBoard(){let n=0,e=!1,t=null;this.#C.forEach((r=>{for(t=r;null!==t;)n=Math.round(100*Math.random()),e=0!==Math.round(2*Math.random()),this.#u.placeShipInGameboard(t,1,"a",n,e)&&(t=null)})),this.#C=[],console.log(`Ships randomly placed in gameboard. Player name: ${this.#p}, Human player: ${this.#h}}`)}setAsWinner(){this.#m=!0}makeRandomMovement(n){if(this.#h)return!1;if(this.tilesAvailable.length<1)return!1;let e=!1,t=!1,r=-1,a=-1;return a=Math.floor(Math.random()*this.#g.length),r=this.#g[a],({tileHit:e,shipHit:t}=n.receiveAttackAtIndex(r)),e||console.log(`Tile not hit at index ${r}`),this.#g.splice(a,1),t&&this.#f++,!t||this.makeRandomMovement(n)}#E(){return[...Array(100).keys()]}#B(){const n=[];n.push(new a(5)),n.push(new a(4)),n.push(new a(4));for(let e=0;e<7;e++)n.push(new a(3));for(let e=0;e<5;e++)n.push(new a(2));return n}}},890:n=>{n.exports=class{#y=0;#b=0;#v=!1;constructor(n){if(1>n||5<n)throw new Error("Ship size must be a number between 1 and 5");this.#y=n,this.#b=0,this.#v=!1}get size(){return this.#y}get timesHit(){return this.#b}get isSunk(){return this.#v}hit(){this.#v||this.#b++,this.#x()}#x(){this.#v||this.#b!==this.#y||(this.#v=!0)}}},580:n=>{n.exports=class{#w=null;#k=!1;constructor(){this.#w=null,this.#k=!1}get ship(){return this.#w}get isHit(){return this.#k}set ship(n){this.#w=n}markTileAsHit(){this.#k=!0}}},773:(n,e,t)=>{const r=t(8),a=t(935),i=t(443),o=t(737);e.generateNavigationBar=()=>{const n=document.createElement("nav"),e=document.createElement("div");e.classList.add("title-container");const t=new Image;t.src=a,t.id="appLogo",t.classList.add("logo"),e.appendChild(t);const i=document.createElement("h1");i.classList.add("app-name"),i.textContent="TOP-Battleship",e.appendChild(i);const o=r.createBtnIconLabel("New Game");return n.appendChild(e),n.appendChild(o),n},e.generateMainContent=()=>{const n=document.createElement("div");n.id="main_container",n.classList.add("mainContainer");const e=new Image;return e.src=o,n.appendChild(e),n},e.generateFooter=()=>{const n=document.createElement("footer"),e=document.createElement("a");e.classList.add("github-contact-info"),e.href="https://github.com/nico9506/TOP-battleship",e.target="_blank";const t=new Image;t.src=i,t.classList.add("footer-logo"),e.appendChild(t);const r=document.createElement("h1");return r.classList.add("github-user"),r.id="githubUser",r.textContent="nico9506",e.appendChild(r),n.appendChild(e),n},e.generateNewGamePopup=()=>{const n=document.createElement("div");n.id="new_game_popup",n.classList.add("popup-new-game");const e=document.createElement("form");e.classList.add("form-container"),e.action="javascript:void(0);";const t=document.createElement("h1");t.classList.add("popup-title"),t.textContent="New Game",e.appendChild(t),e.appendChild(r.generateFieldsToSetUpPlayers(1)),e.appendChild(r.generateFieldsToSetUpPlayers(2));const a=document.createElement("button");return a.type="submit",a.id="accept_players",a.classList.add("btn-form"),a.value="Accept",a.textContent="Continue",e.appendChild(a),n.appendChild(e),n}},8:(n,e,t)=>{const{evLActivateTileToPlaceShip:r,evLActivateTileToReceiveAttack:a}=t(120),i=n=>{const e=document.createElement("div");return e.classList.add("current-player"),e.innerText=n,e};e.generateFieldsToSetUpPlayers=n=>{const e=document.createElement("div");e.classList.add("player-fields");const t=document.createElement("label");t.setAttribute("for","player"+n+"Name"),t.textContent="Player "+n,e.appendChild(t);const r=document.createElement("input");r.type="text",r.id="player_"+n+"_name",r.placeholder="Player name",r.name="player"+n+"Name",r.required,e.appendChild(r);const a=document.createElement("input");a.type="checkbox",a.id="player_"+n+"_type",a.value=!0,a.name="player"+n+"Type",e.appendChild(a);const i=document.createElement("label");return i.setAttribute("for","player"+n+"Type"),i.textContent="Human",e.appendChild(i),e},e.createBtnIconLabel=(n,e=null)=>{const t=document.createElement("button");if(t.classList.add("btn-icon-label"),t.id="btn_"+n.toLowerCase().replace(" ","_"),t.textContent=n,null!==e){const n=new Image;n.src=e,t.appendChild(n)}return t},e.generateBoardToSetUpShips=n=>{const e=document.createElement("div");e.classList.add("boardContainer");for(let t=0;t<n.gameboard.arrayOfTiles.length;t++){const a=document.createElement("div");a.classList.add("tile"),a.setAttribute("index",t),null!==n.gameboard.arrayOfTiles[t].ship?a.classList.add("ship"):a.addEventListener("click",r),e.appendChild(a)}return document.getElementById("main_container").appendChild(i(n.name)),document.getElementById("main_container").appendChild((()=>{const n=document.createElement("div");n.classList.add("slider-box");const e=document.createElement("h4");e.innerText="Horizontal";const t=document.createElement("h4");t.innerText="Vertical";const r=document.createElement("label");r.classList.add("switch");const a=document.createElement("input");a.id="v_h_slider",a.type="checkbox",a.checked=!0,r.appendChild(a);const i=document.createElement("span");return i.classList.add("slider"),r.appendChild(i),n.appendChild(e),n.appendChild(r),n.appendChild(t),n})()),e},e.generateHumanPlayerGameView=(n,e)=>{const t=document.getElementById("main_container");t.innerHTML="";const r=document.createElement("div");r.classList.add("gameplay-human-view");const o=document.createElement("div");o.classList.add("boardContainer");for(let e=0;e<n.gameboard.arrayOfTiles.length;e++){const t=document.createElement("div");t.classList.add("tile"),t.setAttribute("index",e),n.gameboard.arrayOfTiles[e].isHit&&t.classList.add("tile-hit"),null!==n.gameboard.arrayOfTiles[e].ship&&(t.classList.add("ship"),n.gameboard.arrayOfTiles[e].isHit&&t.classList.add("destroyed-ship")),o.appendChild(t)}const s=document.createElement("div");s.classList.add("attacksBoardContainer");for(let t=0;t<n.gameboard.arrayOfTiles.length;t++){const n=document.createElement("div");n.classList.add("tile"),n.setAttribute("index",t),e.gameboard.arrayOfTiles[t].isHit&&n.classList.add("tile-hit"),null!==e.gameboard.arrayOfTiles[t].ship&&e.gameboard.arrayOfTiles[t].isHit?n.classList.add("ship-hit"):n.addEventListener("click",(n=>{a(n)})),s.appendChild(n)}return t.appendChild(i(n.name)),r.appendChild(o),r.appendChild(s),r}},443:(n,e,t)=>{"use strict";n.exports=t.p+"6d4f8d6e9335a6ad1b70.svg"},935:(n,e,t)=>{"use strict";n.exports=t.p+"d9d0bc6079905f93a5c8.svg"},737:(n,e,t)=>{"use strict";n.exports=t.p+"b37bf01e6a22061db50a.jpg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=r[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{"use strict";var n=t(72),e=t.n(n),r=t(825),a=t.n(r),i=t(659),o=t.n(i),s=t(56),A=t.n(s),l=t(540),c=t.n(l),d=t(113),p=t.n(d),m=t(208),u={};u.styleTagTransform=p(),u.setAttributes=A(),u.insert=o().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=c(),e()(m.A,u),m.A&&m.A.locals&&m.A.locals;const h=t(773),g=t(120);!function(){const n=document.body;n.appendChild(h.generateNavigationBar()),n.appendChild(h.generateMainContent()),n.appendChild(h.generateFooter()),n.appendChild(h.generateNewGamePopup())}(),g.assignEventListeners()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,